generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                      Int                       @id @default(autoincrement())
  nom                     String
  email                   String
  password                String
  statu_user_role         Statu_user_role[]
  user_image              UserImage[]
  user_classe_lycee       UserClasseLycee[]

}


model Role {
  id              Int               @id @default(autoincrement())
  nom             String
  statu_user_role Statu_user_role[]
}

model Statu {
  st_id                      Int                          @id @default(autoincrement())
  st_libelle                 String
  role                       Statu_user_role[]
  statu_evaluation           StatuEvaluation[]
}

model Statu_user_role {
  id      Int      @id @default(autoincrement())
  userId  Int
  roleId  Int
  statuId Int
  date    DateTime @default(now())
  Role    Role     @relation(fields: [roleId], references: [id])
  Statu   Statu    @relation(fields: [statuId], references: [st_id])
  user    User     @relation(fields: [userId], references: [id])
}


model Image {
  id           Int           @id @default(autoincrement())
  nom          String
  user_image   UserImage[]
}

model UserImage {
  id      Int      @id @default(autoincrement())
  userId  Int
  imageId Int
  date    DateTime @default(now())
  image   Image    @relation(fields: [imageId], references: [id])
  user    User     @relation(fields: [userId], references: [id])
}


model Classe {
  id                 Int                 @id @default(autoincrement())
  nomClasse          String
  user_classe_lycee       UserClasseLycee[]
  prof_classe_lycee         ProfClasseLycee[]
}

model Lycee {
  id                 Int                 @id @default(autoincrement())
  nomLycee          String
  user_classe_lycee       UserClasseLycee[]
  prof_classe_lycee       ProfClasseLycee[]

}

model Prof {
  id                 Int                 @id @default(autoincrement())
  nomProf          String
  prof_classe_lycee         ProfClasseLycee[]

}

model Matiere {
  id                 Int                 @id @default(autoincrement())
  nomMatiere          String
}

model Evaluation {
  id                 Int                 @id @default(autoincrement())
  date               DateTime
  statuEvaluation   StatuEvaluation[]
}

model UserClasseLycee {
  id                 Int                 @id @default(autoincrement())
  userId             Int
  classeId           Int
  lyceeId            Int
  user               User                @relation(fields: [userId], references: [id])
  classe             Classe              @relation(fields: [classeId], references: [id])
  lycee              Lycee               @relation(fields: [lyceeId],references: [id])
}

model ProfClasseLycee {
  id                Int                 @id @default(autoincrement())
  profId            Int
  classeId           Int
  lyceeId           Int
  prof             Prof              @relation(fields: [profId], references: [id])
  classe             Classe              @relation(fields: [classeId], references: [id])
  lycee             Lycee              @relation(fields: [lyceeId], references: [id])

}


model StatuEvaluation {
  id                Int                  @id @default(autoincrement())
  statuId           Int
  evaluationId      Int
  Statu             Statu                 @relation(fields: [statuId], references: [st_id])
  Evaluation        Evaluation            @relation(fields: [evaluationId], references: [id])

}